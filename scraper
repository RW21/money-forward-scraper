#! /usr/bin/env racket
#lang racket

(require html-parsing sxml threading)

(define file-location
  (command-line
    #:usage-help 
    "Usage: parse.rkt <file>"

    #:args (file-location)
    file-location
))

(define  table
    (~>> file-location
        file->string
        html->xexp
        ((sxpath "//*[contains(@id,'js-transaction-')]/td[position() = 2 or position() = 3 or position() = 4]/div/span"))
    ))

(define (table->csv table csv-output-port)
    (let loop ([count 0] [acc table])
      (cond
        [(empty? table) empty]
        [(or (= count 0) (= count 1)) (fprintf (csv-output-port) "~a," (second (car acc))) (loop (add1 count) (rest acc))]
        [(= count 2) 
        (fprintf (csv-output-port) "~a\n"
          (string-replace (third (car acc)) "," ""))
        (loop 0 (rest acc))]
        )
        ))

(table->csv table current-output-port)
